# This workflow is triggered on push or pull request for the main branch.
# It runs tests and various checks to validate that the proposed changes
# will not introduce any regression after merging the code to the main branch.
name: Build
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/*.md'
      - '*.md'
      - 'docs/**'
      - 'mkdocs.yml'
      - 'LICENSE'
      - 'NOTICE'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/*.md'
      - '*.md'
      - 'docs/**'
      - 'mkdocs.yml'
      - 'LICENSE'
      - 'NOTICE'
env:
  GO_VERSION: "1.15"
  KIND_VERSION: "v0.9.0"
  KIND_IMAGE: "kindest/node:v1.18.8@sha256:f4bcc97a0ad6e7abaf3f643d890add7efe6ee4ab90baeb374b4f41a4c95567eb"
jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
      - name: Vendor Go modules
        run: go mod vendor
      - name: Verify generated code
        run: GOPATH="$(go env GOPATH)" ./hack/verify-codegen.sh
      - name: Release snapshot
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.145.0
          args: release --snapshot --skip-publish --rm-dist
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unit tests
        run: make unit-tests
      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage.txt
  itest-starboard:
    name: Run integration tests / Starboard CLI
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Kubernetes cluster (KIND)
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.KIND_VERSION }}
          image: ${{ env.KIND_IMAGE }}
      - name: Test connection to Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl describe node
      - name: Run integration tests
        run: |
          make itests-starboard
        env:
          KUBECONFIG: /home/runner/.kube/config
          STARBOARD_CLI_LOG_LEVEL: "0"
      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          files: ./itest/starboard/coverage.txt
  itest-starboard-operator:
    name: Run integration tests / Starboard Operator
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Kubernetes cluster (KIND)
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.KIND_VERSION }}
          image: ${{ env.KIND_IMAGE }}
      - name: Test connection to Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl describe node
      - name: Run integration tests
        run: |
          make itests-starboard-operator
        env:
          KUBECONFIG: /home/runner/.kube/config
          OPERATOR_NAMESPACE: default
          OPERATOR_TARGET_NAMESPACES: default
          OPERATOR_SERVICE_ACCOUNT: ""
      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          files: ./itest/starboard-operator/coverage.txt
