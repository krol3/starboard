name: Release
on:
  push:
    tags:
      - "v*"
env:
  GO_VERSION: "1.15"
  KIND_VERSION: "v0.9.0"
  KIND_IMAGE: "kindest/node:v1.18.8@sha256:f4bcc97a0ad6e7abaf3f643d890add7efe6ee4ab90baeb374b4f41a4c95567eb"
jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run unit tests
        run: make unit-tests
  itest-starboard:
    name: Run integration tests / Starboard CLI
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Kubernetes cluster (KIND)
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.KIND_VERSION }}
          image: ${{ env.KIND_IMAGE }}
      - name: Test connection to Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl describe node
      - name: Run integration tests
        run: |
          make itests-starboard
        env:
          KUBECONFIG: /home/runner/.kube/config
          STARBOARD_CLI_LOG_LEVEL: "0"
  itest-starboard-operator:
    name: Run integration tests / Starboard Operator
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Kubernetes cluster (KIND)
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.KIND_VERSION }}
          image: ${{ env.KIND_VERSION }}
      - name: Test connection to Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl describe node
      - name: Run integration tests
        run: |
          make itests-starboard-operator
        env:
          KUBECONFIG: /home/runner/.kube/config
          OPERATOR_NAMESPACE: default
          OPERATOR_TARGET_NAMESPACES: default
          OPERATOR_SERVICE_ACCOUNT: ""
  release:
    name: Release
    needs:
      - unit-tests
      - itest-starboard
      - itest-starboard-operator
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login to docker.io registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to ECR registry
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.ECR_SECRET_ACCESS_KEY }}
      - name: Release
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.145.0
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Log out from docker.io and ECR registries
        if: ${{ always() }}
        run: |
          docker logout docker.io
          docker logout public.ecr.aws
      - name: Update new version for plugin 'starboard' in krew-index
        uses: rajatjindal/krew-release-bot@v0.0.38
